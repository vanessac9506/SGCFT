@model SGCFT.Apresentacao.Models.UsuarioViewModel
@{
    ViewBag.Title = "Cadastro de usuário";
}
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}

<section class="section section-md bg-gray-100">
    <div class="container">
        @if (ViewBag.Sucesso != null)
        {
            if ((bool)ViewBag.Sucesso)
            {
                <div class="alert alert-success" role="alert">Usuário cadastrado com sucesso</div>
            }
            else
            {
                <div class="alert alert-danger" role="alert">
                    @foreach (string mensagem in ViewBag.Mensagens as List<string>)
                    {
                        @mensagem
                        <br />
                    }
                </div>
            }
        }
        <h3 class="text-center">Cadastro de usuário</h3>
        <div class="row justify-content-center">
            <div class="col-lg-11 col-xl-9">
                @using (Html.BeginForm("Index", "Usuario", FormMethod.Post, new { id = "formUsuario", @class = "rd-form" }))
                {
                    <div class="row row-x-16 row-20">
                        <div class="col-md-6">
                            <div class="form-wrap">
                                @Html.TextBoxFor(x => x.Nome, new { id = "txtNome", @class = "form-input", autocomplete = "off" })
                                <label class="form-label" for="txtNome">Nome</label>
                                <label class="warning">@Html.ValidationMessageFor(x => x.Nome)</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-wrap">
                                @Html.TextBoxFor(x => x.Email, new { id = "txtEmail", @class = "form-input", autocomplete = "off" })
                                <label class="form-label" for="txtEmail">Email</label>
                                <label class="warning">@Html.ValidationMessageFor(x => x.Email)</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-wrap">
                                @Html.PasswordFor(x => x.Senha, new { id = "txtSenha", @class = "form-input", autocomplete = "off" })
                                <label class="form-label" for="txtSenha">Senha</label>
                                <label class="warning">@Html.ValidationMessageFor(x => x.Senha)</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-wrap">
                                @Html.TextBoxFor(x => x.Cpf, new { id = "txtCpf", @class = "form-input", autocomplete = "off" })
                                <label class="form-label" for="txtCpf">Cpf</label>
                                <label class="warning">@Html.ValidationMessageFor(x => x.Cpf)</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-wrap">
                                @Html.TextBoxFor(x => x.Cnpj, new { id = "txtCnpj", @class = "form-input", autocomplete = "off" })
                                <label class="form-label" for="txtCnpj">Cnpj</label>
                                <label class="warning">@Html.ValidationMessageFor(x => x.Cnpj)</label>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="form-wrap form-button">
                            <button class="button button-block button-primary" type="submit">Salvar</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</section>