@model SGCFT.Apresentacao.Models.TreinamentoViewModel
@{

    ViewBag.Title = "Cadastro de Treinamento";
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}

<section class="section section-md bg-gray-100">
    <div class="container">
        @if (ViewBag.Sucesso != null)
        {
            if ((bool)ViewBag.Sucesso)
            {
                <div class="alert alert-success" role="alert">Treinamento cadastrado com sucesso</div>
            }
            else
            {
                <div class="alert alert-danger" role="alert">
                    @foreach (string mensagem in ViewBag.Mensagens as List<string>)
                    {
                        @mensagem
                        <br />
                    }
                </div>
            }
        }

        <h3 class="text-center">Cadastro de Treinamento</h3>

        @using (Html.BeginForm("Index", "Treinamento", FormMethod.Post, new { id = "formTreinamento", @class = "rd-form" }))
        {
            <div class="row row-x-16 row-20">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.TextBoxFor(x => x.Tema, new { id = "txtTema", @class = "form-input", autocomplete = "off" })
                        <label class="form-label" for="txtTema">Tema</label>
                        <label class="warning">@Html.ValidationMessageFor(x => x.Tema)</label>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-wrap">
                        @Html.EnumDropDownListFor(x => x.TipoTreinamento, "Selecione um tipo", new { id = "ddlTipoTreinamento", @class = "form-control form-select" })
                        <label class="form-label" for="ddlTipoTreinamento">Tipo de treinamento</label>
                        <label class="warning">@Html.ValidationMessageFor(x => x.TipoTreinamento)</label>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-wrap">
                        @Html.PasswordFor(x => x.Senha, new { id = "txtSenha", @class = "form-input", autocomplete = "off" })
                        <label class="form-label" for="txtSenha">Senha</label>
                        <label class="warning">@Html.ValidationMessageFor(x => x.Senha)</label>
                    </div>
                </div>

                <div class="col-md-12">
                    <div class="form-wrap form-button">
                        <button class="button button-block button-primary" type="submit">Salvar</button>
                    </div>
                </div>
            </div>
        }
    </div>
</section>